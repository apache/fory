# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Build Wheels

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      python-version:
        required: true
        type: string
      bump-version:
        description: 'Whether to bump the version in setup.py'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  actions: write

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install bazel
        if: "runner.os != 'Windows'"
        run: ./ci/run_ci.sh install_bazel

      - name: Install bazel
        if: "runner.os == 'Windows'"
        run: ./ci/run_ci.sh install_bazel_windows
        shell: bash

      - name: Update version in setup.py
        if: "inputs.bump-version"
        run: ./ci/deploy.sh bump_py_version

      - name: Build a binary wheel (Linux, manylinux)
        if: "runner.os == 'Linux'"
        env:
          manylinux_x86_64_image: ${{ env.manylinux_x86_64_image }}
          manylinux_aarch64_image: ${{ env.manylinux_aarch64_image }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          ./ci/build_manylinux_wheel.sh --os "${{ runner.os }}" \
            --arch "${{ runner.arch }}" \
            --python "${{ inputs.python-version }}" \
            --workspace "${GITHUB_WORKSPACE}"

      - name: Build a binary wheel (native)
        if: "runner.os != 'Linux'"
        run: ./ci/deploy.sh build_pyfory
        shell: bash

      - name: Install and verify wheel
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install dist/*.whl
          python -c "import pyfory; print(pyfory.__version__)"

      - name: Upload wheel
#        if: ${{ inputs.bump-version }}
        uses: actions/upload-artifact@v4
        with:
          name: pyfory-wheels-${{ inputs.os }}-${{ inputs.python-version }}${{ inputs.bump-version && '-tagged' || github.sha }}
          path: dist/*.whl
