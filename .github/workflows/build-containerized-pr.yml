# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Build Containerized PR Wheels
on:
  pull_request_target:
    paths: [ci/**, python/**, .github/workflows/**]
  push:
    branches: [main]
    paths: [ci/**, python/**, .github/workflows/**]

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
    steps:
      - uses: actions/checkout@v5
      - name: Build and test wheels
        run: ./ci/build_linux_wheels.py --arch ${{ runner.arch }}
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pyfory-wheels-containerized-${{ matrix.os }}
          path: dist/*.whl

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: "pyfory-wheels-containerized-*"
          path: downloaded_wheels
          merge-multiple: true

      - name: Move wheels to a single directory
        shell: bash
        run: |
          mkdir dist
          find downloaded_wheels -type f -name "*.whl" -exec mv {} dist/ \;
          ls -R dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true
          verify-metadata: false
          packages-dir: dist

      - name: Delete uploaded artifacts from TestPyPI
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${TEST_PYPI_API_TOKEN:-}" ]; then
            echo "TEST_PYPI_API_TOKEN not set; skipping deletion."
            exit 0
          fi
          python -m pip install --upgrade pip twine
          if [ ! -d dist ] || [ -z "$(ls -A dist 2>/dev/null || true)" ]; then
            echo "dist/ is empty â€” nothing to delete."
            exit 0
          fi
          for f in dist/*; do
            echo "Deleting $(basename "$f") from TestPyPI..."
            twine delete --repository-url https://test.pypi.org/legacy/ -u "__token__" -p "$TEST_PYPI_API_TOKEN" "$f" || {
              echo "twine delete failed for $f; continuing."
            }
          done
