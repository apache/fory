    Blocking waiting for file lock on build directory
   Compiling fory-derive v0.13.0 (/Users/chaokunyang/Desktop/chaokun/fury_open_source/rust/fory-derive)
warning: fory-benchmarks@0.1.0: Build script running
warning: fory-benchmarks@0.1.0: OUT_DIR: /Users/chaokunyang/Desktop/chaokun/fury_open_source/rust/target/debug/build/fory-benchmarks-da1d33ca1c6423b6/out
warning: fory-benchmarks@0.1.0: Found proto file: proto/simple.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/medium.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/complex.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/realworld.proto
warning: fory-benchmarks@0.1.0: About to compile protobuf files
warning: fory-benchmarks@0.1.0: Protobuf compilation completed
   Compiling fory v0.13.0 (/Users/chaokunyang/Desktop/chaokun/fury_open_source/rust/fory)
   Compiling fory-tests v0.13.0 (/Users/chaokunyang/Desktop/chaokun/fury_open_source/rust/tests)
   Compiling fory-benchmarks v0.1.0 (/Users/chaokunyang/Desktop/chaokun/fury_open_source/rust/benches)
error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_ext.rs:28:21
   |
28 |     #[derive(Debug, Fory, PartialEq)]
   |                     ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_box.rs:49:14
   |
49 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_box.rs:72:14
   |
72 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_rc_arc_trait_object.rs:37:10
   |
37 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_rc_arc_trait_object.rs:53:10
   |
53 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0405]: cannot find trait `ForyDefault` in this scope
  --> tests/tests/test_rc_arc_trait_object.rs:69:1
   |
69 | register_trait_type!(Animal, Dog, Cat);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
   |
   = note: this error originates in the macro `$crate::impl_smart_pointer_serializer` which comes from the expansion of the macro `register_trait_type` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0405]: cannot find trait `ForyDefault` in this scope
  --> tests/tests/test_rc_arc_trait_object.rs:69:1
   |
69 | register_trait_type!(Animal, Dog, Cat);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
   |
   = note: this error originates in the macro `register_trait_type` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> tests/tests/test_ext.rs:28:21
   |
28 |     #[derive(Debug, Fory, PartialEq)]
   |                     ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Item1` in the current scope
  --> tests/tests/test_ext.rs:28:21
   |
28 |     #[derive(Debug, Fory, PartialEq)]
   |                     ^^^^ function or associated item not found in `Item1`
29 |     struct Item1 {
   |     ------------ function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_cross_language.rs:43:10
   |
43 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_cross_language.rs:48:10
   |
48 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_cross_language.rs:535:14
    |
535 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_trait_object.rs:152:10
    |
152 | #[derive(Fory, Debug, PartialEq, Clone)]
    |          ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_trait_object.rs:158:10
    |
158 | #[derive(Fory, Debug, PartialEq)]
    |          ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_trait_object.rs:251:10
    |
251 | #[derive(Fory, Debug, PartialEq)]
    |          ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_trait_object.rs:267:10
    |
267 | #[derive(Fory, Debug, PartialEq)]
    |          ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0405]: cannot find trait `ForyDefault` in this scope
   --> tests/tests/test_trait_object.rs:283:1
    |
283 | register_trait_type!(Animal, Dog, Cat);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
    = note: this error originates in the macro `$crate::impl_smart_pointer_serializer` which comes from the expansion of the macro `register_trait_type` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0405]: cannot find trait `ForyDefault` in this scope
   --> tests/tests/test_trait_object.rs:283:1
    |
283 | register_trait_type!(Animal, Dog, Cat);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
    = note: this error originates in the macro `register_trait_type` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_trait_object.rs:285:10
    |
285 | #[derive(Fory)]
    |          ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

Some errors have detailed explanations: E0433, E0599.
For more information about an error, try `rustc --explain E0433`.
error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> tests/tests/test_box.rs:49:14
   |
49 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_complex_struct.rs:70:14
   |
70 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_complex_struct.rs:75:14
   |
75 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_complex_struct.rs:121:14
    |
121 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_box.rs:49:14
    |
49  |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `test_box_struct::Person` in the current scope
  --> tests/tests/test_box.rs:49:14
   |
49 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `test_box_struct::Person`
50 |     struct Person {
   |     ------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

Some errors have detailed explanations: E0405, E0433.
For more information about an error, try `rustc --explain E0405`.
error: could not compile `fory-tests` (test "test_ext") due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> tests/tests/test_box.rs:72:14
   |
72 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_box.rs:72:14
    |
72  |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `test_box_struct_separate::Person` in the current scope
  --> tests/tests/test_box.rs:72:14
   |
72 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `test_box_struct_separate::Person`
73 |     struct Person {
   |     ------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error: could not compile `fory-tests` (test "test_rc_arc_trait_object") due to 8 previous errors
error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
  --> tests/tests/test_cross_language.rs:43:10
   |
43 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ variant or associated item not found in `Option<_>`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Item` in the current scope
  --> tests/tests/test_cross_language.rs:43:10
   |
43 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ function or associated item not found in `Item`
44 | struct Item {
   | ----------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_complex_struct.rs:70:14
    |
70  |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error: could not compile `fory-tests` (test "test_trait_object") due to 11 previous errors
error[E0599]: no function or associated item named `fory_default` found for struct `complex_struct::Animal` in the current scope
  --> tests/tests/test_complex_struct.rs:70:14
   |
70 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `complex_struct::Animal`
71 |     struct Animal {
   |     ------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error: could not compile `fory-tests` (test "test_box") due to 8 previous errors
error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_cross_language.rs:48:10
    |
48  | #[derive(Fory, Debug, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> tests/tests/test_cross_language.rs:48:10
   |
48 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_complex_struct.rs:75:14
    |
75  |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Item` in the current scope
  --> tests/tests/test_cross_language.rs:48:10
   |
44 | struct Item {
   | ----------- function or associated item `fory_default` not found for this struct
...
48 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ function or associated item not found in `Item`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
  --> tests/tests/test_cross_language.rs:48:10
   |
48 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ variant or associated item not found in `Option<_>`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_complex_struct.rs:75:14
    |
75  |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Color` in the current scope
  --> tests/tests/test_cross_language.rs:48:10
   |
35 | enum Color {
   | ---------- variant or associated item `fory_default` not found for this enum
...
48 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ variant or associated item not found in `Color`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `f32` in the current scope
  --> tests/tests/test_complex_struct.rs:75:14
   |
75 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `f32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_cross_language.rs:48:10
    |
48  | #[derive(Fory, Debug, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
  --> tests/tests/test_complex_struct.rs:75:14
   |
75 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `f64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `NaiveDate` in the current scope
   --> tests/tests/test_complex_struct.rs:75:14
    |
75  |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `NaiveDate`
    |
note: if you're trying to build a new `NaiveDate` consider using one of the following associated functions:
      NaiveDate::from_ymd
      NaiveDate::from_ymd_opt
      NaiveDate::from_yo
      NaiveDate::from_yo_opt
      and 7 others
   --> /Users/chaokunyang/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/naive/date/mod.rs:167:5
    |
167 |     pub const fn from_ymd(year: i32, month: u32, day: u32) -> NaiveDate {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
196 |     pub const fn from_ymd_opt(year: i32, month: u32, day: u32) -> Option<NaiveDate> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
215 |     pub const fn from_yo(year: i32, ordinal: u32) -> NaiveDate {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
245 |     pub const fn from_yo_opt(year: i32, ordinal: u32) -> Option<NaiveDate> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_complex_struct.rs:75:14
    |
75  |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
  --> tests/tests/test_complex_struct.rs:75:14
   |
75 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ variant or associated item not found in `Option<_>`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `SimpleStruct` in the current scope
  --> tests/tests/test_cross_language.rs:48:10
   |
48 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ function or associated item not found in `SimpleStruct`
49 | struct SimpleStruct {
   | ------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `NaiveDateTime` in the current scope
   --> tests/tests/test_complex_struct.rs:75:14
    |
75  |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `NaiveDateTime`
    |
note: if you're trying to build a new `NaiveDateTime` consider using one of the following associated functions:
      NaiveDateTime::new
      NaiveDateTime::from_timestamp
      NaiveDateTime::from_timestamp_millis
      NaiveDateTime::from_timestamp_micros
      and 3 others
   --> /Users/chaokunyang/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/naive/datetime/mod.rs:99:5
    |
99  |     pub const fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub const fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
139 |     pub const fn from_timestamp_millis(millis: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
154 |     pub const fn from_timestamp_micros(micros: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
  --> tests/tests/test_cross_language.rs:48:10
   |
48 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ function or associated item not found in `f64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `complex_struct::Person` in the current scope
  --> tests/tests/test_complex_struct.rs:75:14
   |
75 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `complex_struct::Person`
76 |     struct Person {
   |     ------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `complex_struct::Animal` in the current scope
  --> tests/tests/test_complex_struct.rs:75:14
   |
71 |     struct Animal {
   |     ------------- function or associated item `fory_default` not found for this struct
...
75 |     #[derive(Fory, Debug, PartialEq)]
   |              ^^^^ function or associated item not found in `complex_struct::Animal`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
  --> tests/tests/test_cross_language.rs:48:10
   |
48 | #[derive(Fory, Debug, PartialEq)]
   |          ^^^^ variant or associated item not found in `Option<String>`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_complex_struct.rs:121:14
    |
121 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `encode_to_obin::Animal` in the current scope
   --> tests/tests/test_complex_struct.rs:121:14
    |
121 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `encode_to_obin::Animal`
122 |     struct Animal {
    |     ------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
   --> tests/tests/test_cross_language.rs:535:14
    |
535 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i32`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_cross_language.rs:535:14
    |
535 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i16` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i16`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i32`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f32` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `f32`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Item2` in the current scope
   --> tests/tests/test_cross_language.rs:535:14
    |
535 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `Item2`
536 |     struct Item2 {
    |     ------------ function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `f64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `encode_to_obin::Person` in the current scope
   --> tests/tests/test_complex_struct.rs:126:14
    |
126 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `encode_to_obin::Person`
127 |     struct Person {
    |     ------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_compatible.rs:26:14
   |
26 |     #[derive(Fory, Debug)]
   |              ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_compatible.rs:37:14
   |
37 |     #[derive(Fory, Debug)]
   |              ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_compatible.rs:73:14
   |
73 |     #[derive(Fory, Debug)]
   |              ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> tests/tests/test_compatible.rs:80:14
   |
80 |     #[derive(Fory, Debug)]
   |              ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:105:14
    |
105 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:109:14
    |
109 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:113:14
    |
113 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:119:14
    |
119 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:145:14
    |
145 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:179:14
    |
179 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:189:14
    |
189 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:296:14
    |
296 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:325:14
    |
325 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:332:14
    |
332 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:340:14
    |
340 |     #[derive(Fory, Debug)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:394:14
    |
394 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:406:14
    |
406 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:461:14
    |
461 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:475:14
    |
475 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:520:14
    |
520 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
   --> tests/tests/test_compatible.rs:530:14
    |
530 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ use of undeclared type `ForyDefault`
    |
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/complex.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/complex.rs:34:10
   |
34 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/complex.rs:42:10
   |
42 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/complex.rs:52:10
   |
52 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/complex.rs:63:10
   |
63 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/medium.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/medium.rs:33:10
   |
33 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/medium.rs:43:10
   |
43 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/realworld.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error: could not compile `fory-tests` (test "test_cross_language") due to 20 previous errors
error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/realworld.rs:37:10
   |
37 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/realworld.rs:48:10
   |
48 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/realworld.rs:58:10
   |
58 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/simple.rs:24:10
   |
24 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/simple.rs:32:10
   |
32 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0433]: failed to resolve: use of undeclared type `ForyDefault`
  --> benches/src/models/simple.rs:38:10
   |
38 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ use of undeclared type `ForyDefault`
   |
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider importing this trait
   |
18 + use fory_core::serializer::ForyDefault;
   |

error: could not compile `fory-tests` (test "test_complex_struct") due to 32 previous errors
error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_compatible.rs:26:14
    |
26  |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_compatible.rs:26:14
    |
26  |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:26:14
    |
26  |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
  --> tests/tests/test_compatible.rs:26:14
   |
26 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `i8`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Animal1` in the current scope
  --> tests/tests/test_compatible.rs:26:14
   |
26 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `Animal1`
27 |     struct Animal1 {
   |     -------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<i8>` in the current scope
   --> tests/tests/test_compatible.rs:26:14
    |
26  |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<i8>`
    |
note: if you're trying to build a new `Vec<i8>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_compatible.rs:37:14
    |
37  |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:37:14
    |
37  |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_compatible.rs:37:14
    |
37  |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
  --> tests/tests/test_compatible.rs:37:14
   |
37 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `i8`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i16` in the current scope
  --> tests/tests/test_compatible.rs:37:14
   |
37 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `i16`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Animal2` in the current scope
  --> tests/tests/test_compatible.rs:37:14
   |
37 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `Animal2`
38 |     struct Animal2 {
   |     -------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<i8>` in the current scope
   --> tests/tests/test_compatible.rs:37:14
    |
37  |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<i8>`
    |
note: if you're trying to build a new `Vec<i8>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/complex.rs:25:10
    |
25  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
  --> tests/tests/test_compatible.rs:73:14
   |
73 |     #[derive(Fory, Debug)]
   |              ^^^^ variant or associated item not found in `Option<_>`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/complex.rs:25:10
    |
25  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
  --> tests/tests/test_compatible.rs:73:14
   |
73 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `i64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/complex.rs:25:10
    |
25  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `skip_option::Item1` in the current scope
  --> tests/tests/test_compatible.rs:73:14
   |
73 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `skip_option::Item1`
74 |     struct Item1 {
   |     ------------ function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
  --> tests/tests/test_compatible.rs:80:14
   |
80 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `i8`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
  --> benches/src/models/complex.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `f64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
  --> tests/tests/test_compatible.rs:80:14
   |
80 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `i64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyProduct` in the current scope
  --> benches/src/models/complex.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyProduct`
26 | pub struct ForyProduct {
   | ---------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `skip_option::Item2` in the current scope
  --> tests/tests/test_compatible.rs:80:14
   |
80 |     #[derive(Fory, Debug)]
   |              ^^^^ function or associated item not found in `skip_option::Item2`
81 |     struct Item2 {
   |     ------------ function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:105:14
    |
105 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nonexistent_struct::Item1` in the current scope
   --> tests/tests/test_compatible.rs:105:14
    |
105 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nonexistent_struct::Item1`
106 |     pub struct Item1 {
    |     ---------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:109:14
    |
109 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nonexistent_struct::Item2` in the current scope
   --> tests/tests/test_compatible.rs:109:14
    |
109 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `nonexistent_struct::Item2`
110 |     pub struct Item2 {
    |     ---------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nonexistent_struct::Item1` in the current scope
   --> tests/tests/test_compatible.rs:113:14
    |
106 |     pub struct Item1 {
    |     ---------------- function or associated item `fory_default` not found for this struct
...
113 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nonexistent_struct::Item1`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:113:14
    |
113 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_compatible.rs:113:14
    |
113 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nonexistent_struct::Person1` in the current scope
   --> tests/tests/test_compatible.rs:113:14
    |
113 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nonexistent_struct::Person1`
114 |     struct Person1 {
    |     -------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nonexistent_struct::Item2` in the current scope
   --> tests/tests/test_compatible.rs:119:14
    |
110 |     pub struct Item2 {
    |     ---------------- function or associated item `fory_default` not found for this struct
...
119 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nonexistent_struct::Item2`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/complex.rs:34:10
    |
34  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:119:14
    |
119 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyProduct` in the current scope
  --> benches/src/models/complex.rs:34:10
   |
26 | pub struct ForyProduct {
   | ---------------------- function or associated item `fory_default` not found for this struct
...
34 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyProduct`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_compatible.rs:119:14
    |
119 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> benches/src/models/complex.rs:34:10
   |
34 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `nonexistent_struct::Person2` in the current scope
   --> tests/tests/test_compatible.rs:119:14
    |
119 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nonexistent_struct::Person2`
120 |     struct Person2 {
    |     -------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
  --> benches/src/models/complex.rs:34:10
   |
34 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `f64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:145:14
    |
145 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyOrderItem` in the current scope
  --> benches/src/models/complex.rs:34:10
   |
34 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyOrderItem`
35 | pub struct ForyOrderItem {
   | ------------------------ function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/complex.rs:34:10
    |
34  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:145:14
    |
145 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:145:14
    |
145 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Animal` in the current scope
   --> tests/tests/test_compatible.rs:145:14
    |
145 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `Animal`
146 |     struct Animal {
    |     ------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:145:14
    |
145 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<String>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:145:14
    |
145 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<Vec<Option<String>>>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:179:14
    |
179 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:179:14
    |
179 |     #[derive(Fory, Debug)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/complex.rs:42:10
    |
42  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `NaiveDateTime` in the current scope
   --> benches/src/models/complex.rs:42:10
    |
42  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `NaiveDateTime`
    |
note: if you're trying to build a new `NaiveDateTime` consider using one of the following associated functions:
      NaiveDateTime::new
      NaiveDateTime::from_timestamp
      NaiveDateTime::from_timestamp_millis
      NaiveDateTime::from_timestamp_micros
      and 3 others
   --> /Users/chaokunyang/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/naive/datetime/mod.rs:99:5
    |
99  |     pub const fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub const fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
139 |     pub const fn from_timestamp_millis(millis: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
154 |     pub const fn from_timestamp_micros(micros: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:179:14
    |
179 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nullable::Item1` in the current scope
   --> tests/tests/test_compatible.rs:179:14
    |
179 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nullable::Item1`
180 |     pub struct Item1 {
    |     ---------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/complex.rs:42:10
    |
42  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:189:14
    |
189 |     #[derive(Fory, Debug)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/complex.rs:42:10
    |
42  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:189:14
    |
189 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyCustomer` in the current scope
  --> benches/src/models/complex.rs:42:10
   |
42 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyCustomer`
43 | pub struct ForyCustomer {
   | ----------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:189:14
    |
189 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nullable::Item2` in the current scope
   --> tests/tests/test_compatible.rs:189:14
    |
189 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nullable::Item2`
190 |     pub struct Item2 {
    |     ---------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashSet` in the current scope
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashSet<_, _>`
    |
note: if you're trying to build a new `HashSet<_, _>` consider using one of the following associated functions:
      HashSet::<T>::new
      HashSet::<T>::with_capacity
      HashSet::<T, S>::with_hasher
      HashSet::<T, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/set.rs:144:5
    |
144 |     pub fn new() -> HashSet<T, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
164 |     pub fn with_capacity(capacity: usize) -> HashSet<T, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
391 |     pub const fn with_hasher(hasher: S) -> HashSet<T, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
422 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyCustomer` in the current scope
  --> benches/src/models/complex.rs:52:10
   |
43 | pub struct ForyCustomer {
   | ----------------------- function or associated item `fory_default` not found for this struct
...
52 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyCustomer`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/complex.rs:52:10
    |
52  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/complex.rs:52:10
    |
52  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/complex.rs:52:10
    |
52  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `NaiveDateTime` in the current scope
   --> benches/src/models/complex.rs:52:10
    |
52  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `NaiveDateTime`
    |
note: if you're trying to build a new `NaiveDateTime` consider using one of the following associated functions:
      NaiveDateTime::new
      NaiveDateTime::from_timestamp
      NaiveDateTime::from_timestamp_millis
      NaiveDateTime::from_timestamp_micros
      and 3 others
   --> /Users/chaokunyang/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/naive/datetime/mod.rs:99:5
    |
99  |     pub const fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub const fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
139 |     pub const fn from_timestamp_millis(millis: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
154 |     pub const fn from_timestamp_micros(micros: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nullable_container::Item1` in the current scope
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nullable_container::Item1`
226 |     pub struct Item1 {
    |     ---------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
  --> benches/src/models/complex.rs:52:10
   |
52 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `f64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<i8>` in the current scope
   --> tests/tests/test_compatible.rs:225:14
    |
225 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<i8>`
    |
note: if you're trying to build a new `Vec<i8>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyOrder` in the current scope
  --> benches/src/models/complex.rs:52:10
   |
52 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyOrder`
53 | pub struct ForyOrder {
   | -------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyOrderItem` in the current scope
  --> benches/src/models/complex.rs:52:10
   |
35 | pub struct ForyOrderItem {
   | ------------------------ function or associated item `fory_default` not found for this struct
...
52 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyOrderItem`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/complex.rs:63:10
    |
63  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/complex.rs:63:10
    |
63  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashSet` in the current scope
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashSet<_, _>`
    |
note: if you're trying to build a new `HashSet<_, _>` consider using one of the following associated functions:
      HashSet::<T>::new
      HashSet::<T>::with_capacity
      HashSet::<T, S>::with_hasher
      HashSet::<T, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/set.rs:144:5
    |
144 |     pub fn new() -> HashSet<T, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
164 |     pub fn with_capacity(capacity: usize) -> HashSet<T, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
391 |     pub const fn with_hasher(hasher: S) -> HashSet<T, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
422 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ECommerceData` in the current scope
  --> benches/src/models/complex.rs:63:10
   |
63 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ECommerceData`
64 | pub struct ECommerceData {
   | ------------------------ function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyCustomer` in the current scope
  --> benches/src/models/complex.rs:63:10
   |
43 | pub struct ForyCustomer {
   | ----------------------- function or associated item `fory_default` not found for this struct
...
63 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyCustomer`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/complex.rs:63:10
    |
63  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyOrder` in the current scope
  --> benches/src/models/complex.rs:63:10
   |
53 | pub struct ForyOrder {
   | -------------------- function or associated item `fory_default` not found for this struct
...
63 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyOrder`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `nullable_container::Item2` in the current scope
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nullable_container::Item2`
240 |     pub struct Item2 {
    |     ---------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<i8>` in the current scope
   --> tests/tests/test_compatible.rs:239:14
    |
239 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<i8>`
    |
note: if you're trying to build a new `Vec<i8>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyProduct` in the current scope
  --> benches/src/models/complex.rs:63:10
   |
26 | pub struct ForyProduct {
   | ---------------------- function or associated item `fory_default` not found for this struct
...
63 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyProduct`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashSet` in the current scope
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashSet<_, _>`
    |
note: if you're trying to build a new `HashSet<_, _>` consider using one of the following associated functions:
      HashSet::<T>::new
      HashSet::<T>::with_capacity
      HashSet::<T, S>::with_hasher
      HashSet::<T, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/set.rs:144:5
    |
144 |     pub fn new() -> HashSet<T, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
164 |     pub fn with_capacity(capacity: usize) -> HashSet<T, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
391 |     pub const fn with_hasher(hasher: S) -> HashSet<T, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
422 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/medium.rs:25:10
    |
25  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `inner_nullable::Item1` in the current scope
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `inner_nullable::Item1`
289 |     pub struct Item1 {
    |     ---------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ variant or associated item not found in `Option<String>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ variant or associated item not found in `Option<i8>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:288:14
    |
288 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyAddress` in the current scope
  --> benches/src/models/medium.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyAddress`
26 | pub struct ForyAddress {
   | ---------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyAddress` in the current scope
  --> benches/src/models/medium.rs:33:10
   |
26 | pub struct ForyAddress {
   | ---------------------- function or associated item `fory_default` not found for this struct
...
33 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyAddress`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> benches/src/models/medium.rs:33:10
   |
33 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:296:14
    |
296 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `NaiveDateTime` in the current scope
   --> benches/src/models/medium.rs:33:10
    |
33  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `NaiveDateTime`
    |
note: if you're trying to build a new `NaiveDateTime` consider using one of the following associated functions:
      NaiveDateTime::new
      NaiveDateTime::from_timestamp
      NaiveDateTime::from_timestamp_millis
      NaiveDateTime::from_timestamp_micros
      and 3 others
   --> /Users/chaokunyang/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/naive/datetime/mod.rs:99:5
    |
99  |     pub const fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub const fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
139 |     pub const fn from_timestamp_millis(millis: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
154 |     pub const fn from_timestamp_micros(micros: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashSet` in the current scope
   --> tests/tests/test_compatible.rs:296:14
    |
296 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashSet<_, _>`
    |
note: if you're trying to build a new `HashSet<_, _>` consider using one of the following associated functions:
      HashSet::<T>::new
      HashSet::<T>::with_capacity
      HashSet::<T, S>::with_hasher
      HashSet::<T, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/set.rs:144:5
    |
144 |     pub fn new() -> HashSet<T, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
164 |     pub fn with_capacity(capacity: usize) -> HashSet<T, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
391 |     pub const fn with_hasher(hasher: S) -> HashSet<T, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
422 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> tests/tests/test_compatible.rs:296:14
    |
296 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/medium.rs:33:10
    |
33  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:296:14
    |
296 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/medium.rs:33:10
    |
33  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `inner_nullable::Item2` in the current scope
   --> tests/tests/test_compatible.rs:296:14
    |
296 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `inner_nullable::Item2`
297 |     pub struct Item2 {
    |     ---------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/medium.rs:33:10
    |
33  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_compatible.rs:296:14
    |
296 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:296:14
    |
296 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Person` in the current scope
  --> benches/src/models/medium.rs:33:10
   |
33 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `Person`
34 | pub struct Person {
   | ----------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:325:14
    |
325 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:325:14
    |
325 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `String` in the current scope
   --> tests/tests/test_compatible.rs:325:14
    |
325 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `String`
    |
note: if you're trying to build a new `String` consider using one of the following associated functions:
      String::new
      String::with_capacity
      String::try_with_capacity
      String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Item` in the current scope
   --> tests/tests/test_compatible.rs:325:14
    |
325 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `Item`
326 |     pub struct Item {
    |     --------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:325:14
    |
325 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<String>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Item` in the current scope
   --> tests/tests/test_compatible.rs:332:14
    |
326 |     pub struct Item {
    |     --------------- function or associated item `fory_default` not found for this struct
...
332 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Item`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:332:14
    |
332 |     #[derive(Fory, Debug)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/medium.rs:43:10
    |
43  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:332:14
    |
332 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `bool` in the current scope
  --> benches/src/models/medium.rs:43:10
   |
43 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `bool`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `nullable_struct::Person1` in the current scope
   --> tests/tests/test_compatible.rs:332:14
    |
332 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nullable_struct::Person1`
333 |     pub struct Person1 {
    |     ------------------ function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/medium.rs:43:10
    |
43  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/medium.rs:43:10
    |
43  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:340:14
    |
340 |     #[derive(Fory, Debug)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Company` in the current scope
  --> benches/src/models/medium.rs:43:10
   |
43 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `Company`
44 | pub struct Company {
   | ------------------ function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Item` in the current scope
   --> tests/tests/test_compatible.rs:340:14
    |
326 |     pub struct Item {
    |     --------------- function or associated item `fory_default` not found for this struct
...
340 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `Item`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Person` in the current scope
  --> benches/src/models/medium.rs:43:10
   |
34 | pub struct Person {
   | ----------------- function or associated item `fory_default` not found for this struct
...
43 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `Person`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
   --> tests/tests/test_compatible.rs:340:14
    |
340 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `i64`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `nullable_struct::Person2` in the current scope
   --> tests/tests/test_compatible.rs:340:14
    |
340 |     #[derive(Fory, Debug)]
    |              ^^^^ function or associated item not found in `nullable_struct::Person2`
341 |     pub struct Person2 {
    |     ------------------ function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyAddress` in the current scope
  --> benches/src/models/medium.rs:43:10
   |
26 | pub struct ForyAddress {
   | ---------------------- function or associated item `fory_default` not found for this struct
...
43 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyAddress`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no variant or associated item named `fory_default` found for enum `Color1` in the current scope
   --> tests/tests/test_compatible.rs:394:14
    |
380 |     enum Color1 {
    |     ----------- variant or associated item `fory_default` not found for this enum
...
394 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Color1`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Color2` in the current scope
   --> tests/tests/test_compatible.rs:394:14
    |
388 |     enum Color2 {
    |     ----------- variant or associated item `fory_default` not found for this enum
...
394 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Color2`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:394:14
    |
394 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:394:14
    |
394 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:394:14
    |
394 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `enum_without_payload::Person1` in the current scope
   --> tests/tests/test_compatible.rs:394:14
    |
394 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `enum_without_payload::Person1`
395 |     struct Person1 {
    |     -------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/realworld.rs:25:10
    |
25  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
  --> benches/src/models/realworld.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `f64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/realworld.rs:25:10
    |
25  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> benches/src/models/realworld.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no variant or associated item named `fory_default` found for enum `Color1` in the current scope
   --> tests/tests/test_compatible.rs:406:14
    |
380 |     enum Color1 {
    |     ----------- variant or associated item `fory_default` not found for this enum
...
406 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Color1`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Color2` in the current scope
   --> tests/tests/test_compatible.rs:406:14
    |
388 |     enum Color2 {
    |     ----------- variant or associated item `fory_default` not found for this enum
...
406 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Color2`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/realworld.rs:25:10
    |
25  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `NaiveDateTime` in the current scope
   --> benches/src/models/realworld.rs:25:10
    |
25  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `NaiveDateTime`
    |
note: if you're trying to build a new `NaiveDateTime` consider using one of the following associated functions:
      NaiveDateTime::new
      NaiveDateTime::from_timestamp
      NaiveDateTime::from_timestamp_millis
      NaiveDateTime::from_timestamp_micros
      and 3 others
   --> /Users/chaokunyang/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/naive/datetime/mod.rs:99:5
    |
99  |     pub const fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub const fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
139 |     pub const fn from_timestamp_millis(millis: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
154 |     pub const fn from_timestamp_micros(micros: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> tests/tests/test_compatible.rs:406:14
    |
406 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyLogEntry` in the current scope
  --> benches/src/models/realworld.rs:25:10
   |
25 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyLogEntry`
26 | pub struct ForyLogEntry {
   | ----------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:406:14
    |
406 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:406:14
    |
406 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `enum_without_payload::Person2` in the current scope
   --> tests/tests/test_compatible.rs:406:14
    |
406 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `enum_without_payload::Person2`
407 |     struct Person2 {
    |     -------------- function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/realworld.rs:37:10
    |
37  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Color` in the current scope
   --> tests/tests/test_compatible.rs:461:14
    |
454 |     enum Color {
    |     ---------- variant or associated item `fory_default` not found for this enum
...
461 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Color`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `bool` in the current scope
  --> benches/src/models/realworld.rs:37:10
   |
37 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `bool`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:461:14
    |
461 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `NaiveDateTime` in the current scope
   --> benches/src/models/realworld.rs:37:10
    |
37  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `NaiveDateTime`
    |
note: if you're trying to build a new `NaiveDateTime` consider using one of the following associated functions:
      NaiveDateTime::new
      NaiveDateTime::from_timestamp
      NaiveDateTime::from_timestamp_millis
      NaiveDateTime::from_timestamp_micros
      and 3 others
   --> /Users/chaokunyang/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/naive/datetime/mod.rs:99:5
    |
99  |     pub const fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub const fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
139 |     pub const fn from_timestamp_millis(millis: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
154 |     pub const fn from_timestamp_micros(micros: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/realworld.rs:37:10
    |
37  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/realworld.rs:37:10
    |
37  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:461:14
    |
461 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `named_enum::Item1` in the current scope
   --> tests/tests/test_compatible.rs:461:14
    |
461 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `named_enum::Item1`
462 |     struct Item1 {
    |     ------------ function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyUserProfile` in the current scope
  --> benches/src/models/realworld.rs:37:10
   |
37 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyUserProfile`
38 | pub struct ForyUserProfile {
   | -------------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no variant or associated item named `fory_default` found for enum `Color` in the current scope
   --> tests/tests/test_compatible.rs:475:14
    |
454 |     enum Color {
    |     ---------- variant or associated item `fory_default` not found for this enum
...
475 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Color`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:475:14
    |
475 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i8` in the current scope
   --> tests/tests/test_compatible.rs:475:14
    |
475 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i8`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
  --> benches/src/models/realworld.rs:48:10
   |
48 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `f64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/realworld.rs:48:10
    |
48  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `named_enum::Item2` in the current scope
   --> tests/tests/test_compatible.rs:475:14
    |
475 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `named_enum::Item2`
476 |     struct Item2 {
    |     ------------ function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i64` in the current scope
  --> benches/src/models/realworld.rs:48:10
   |
48 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `i64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `NaiveDateTime` in the current scope
   --> benches/src/models/realworld.rs:48:10
    |
48  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `NaiveDateTime`
    |
note: if you're trying to build a new `NaiveDateTime` consider using one of the following associated functions:
      NaiveDateTime::new
      NaiveDateTime::from_timestamp
      NaiveDateTime::from_timestamp_millis
      NaiveDateTime::from_timestamp_micros
      and 3 others
   --> /Users/chaokunyang/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/naive/datetime/mod.rs:99:5
    |
99  |     pub const fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub const fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
139 |     pub const fn from_timestamp_millis(millis: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
154 |     pub const fn from_timestamp_micros(micros: i64) -> Option<NaiveDateTime> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
   --> tests/tests/test_compatible.rs:520:14
    |
520 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i32`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/realworld.rs:48:10
    |
48  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:520:14
    |
520 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyAPIMetrics` in the current scope
  --> benches/src/models/realworld.rs:48:10
   |
48 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyAPIMetrics`
49 | pub struct ForyAPIMetrics {
   | ------------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `boxed::Item1` in the current scope
   --> tests/tests/test_compatible.rs:520:14
    |
520 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `boxed::Item1`
521 |     struct Item1 {
    |     ------------ function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
   --> tests/tests/test_compatible.rs:530:14
    |
530 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `i32`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no variant or associated item named `fory_default` found for enum `Option` in the current scope
   --> tests/tests/test_compatible.rs:530:14
    |
530 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ variant or associated item not found in `Option<_>`
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/realworld.rs:58:10
    |
58  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `boxed::Item2` in the current scope
   --> tests/tests/test_compatible.rs:530:14
    |
530 |     #[derive(Fory, Debug, PartialEq)]
    |              ^^^^ function or associated item not found in `boxed::Item2`
531 |     struct Item2 {
    |     ------------ function or associated item `fory_default` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/realworld.rs:58:10
    |
58  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `SystemData` in the current scope
  --> benches/src/models/realworld.rs:58:10
   |
58 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `SystemData`
59 | pub struct SystemData {
   | --------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyLogEntry` in the current scope
  --> benches/src/models/realworld.rs:58:10
   |
26 | pub struct ForyLogEntry {
   | ----------------------- function or associated item `fory_default` not found for this struct
...
58 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyLogEntry`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyAPIMetrics` in the current scope
  --> benches/src/models/realworld.rs:58:10
   |
49 | pub struct ForyAPIMetrics {
   | ------------------------- function or associated item `fory_default` not found for this struct
...
58 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyAPIMetrics`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/realworld.rs:58:10
    |
58  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `ForyUserProfile` in the current scope
  --> benches/src/models/realworld.rs:58:10
   |
38 | pub struct ForyUserProfile {
   | -------------------------- function or associated item `fory_default` not found for this struct
...
58 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `ForyUserProfile`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `bool` in the current scope
  --> benches/src/models/simple.rs:24:10
   |
24 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `bool`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> benches/src/models/simple.rs:24:10
   |
24 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/simple.rs:24:10
    |
24  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for type `f64` in the current scope
  --> benches/src/models/simple.rs:24:10
   |
24 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `f64`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `SimpleStruct` in the current scope
  --> benches/src/models/simple.rs:24:10
   |
24 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `SimpleStruct`
25 | pub struct SimpleStruct {
   | ----------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `Vec<_, _>` in the current scope
   --> benches/src/models/simple.rs:32:10
    |
32  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `Vec<_, _>`
    |
note: if you're trying to build a new `Vec<_, _>` consider using one of the following associated functions:
      Vec::<T>::new
      Vec::<T>::with_capacity
      Vec::<T>::try_with_capacity
      Vec::<T>::from_raw_parts
      and 6 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:439:5
    |
439 |     pub const fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
499 |     pub fn with_capacity(capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     pub fn try_with_capacity(capacity: usize) -> Result<Self, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     pub unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `SimpleList` in the current scope
  --> benches/src/models/simple.rs:32:10
   |
32 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `SimpleList`
33 | pub struct SimpleList {
   | --------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error: could not compile `fory-tests` (test "test_compatible") due to 178 previous errors
error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/simple.rs:32:10
    |
32  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `HashMap` in the current scope
   --> benches/src/models/simple.rs:38:10
    |
38  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `HashMap<_, _, _>`
    |
note: if you're trying to build a new `HashMap<_, _, _>` consider using one of the following associated functions:
      HashMap::<K, V>::new
      HashMap::<K, V>::with_capacity
      HashMap::<K, V, S>::with_hasher
      HashMap::<K, V, S>::with_capacity_and_hasher
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:261:5
    |
261 |     pub fn new() -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn with_capacity(capacity: usize) -> HashMap<K, V, RandomState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
343 |     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashMap<K, V, S> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

error[E0599]: no function or associated item named `fory_default` found for struct `SimpleMap` in the current scope
  --> benches/src/models/simple.rs:38:10
   |
38 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `SimpleMap`
39 | pub struct SimpleMap {
   | -------------------- function or associated item `fory_default` not found for this struct
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for type `i32` in the current scope
  --> benches/src/models/simple.rs:38:10
   |
38 | #[derive(Fory, Debug, Clone, PartialEq)]
   |          ^^^^ function or associated item not found in `i32`
   |
   = help: items from traits can only be used if the trait is in scope
   = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
   |
18 + use fory_core::serializer::ForyDefault;
   |

error[E0599]: no function or associated item named `fory_default` found for struct `std::string::String` in the current scope
   --> benches/src/models/simple.rs:38:10
    |
38  | #[derive(Fory, Debug, Clone, PartialEq)]
    |          ^^^^ function or associated item not found in `std::string::String`
    |
note: if you're trying to build a new `std::string::String` consider using one of the following associated functions:
      std::string::String::new
      std::string::String::with_capacity
      std::string::String::try_with_capacity
      std::string::String::from_utf8
      and 9 others
   --> /Users/chaokunyang/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs:444:5
    |
444 |     pub const fn new() -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
487 |     pub fn with_capacity(capacity: usize) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
500 |     pub fn try_with_capacity(capacity: usize) -> Result<String, TryReserveError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
563 |     pub fn from_utf8(vec: Vec<u8>) -> Result<String, FromUtf8Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is in scope
    = note: this error originates in the derive macro `Fory` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `ForyDefault` which provides `fory_default` is implemented but not in scope; perhaps you want to import it
    |
18  + use fory_core::serializer::ForyDefault;
    |

warning: fory-benchmarks@0.1.0: Build script running
warning: fory-benchmarks@0.1.0: OUT_DIR: /Users/chaokunyang/Desktop/chaokun/fury_open_source/rust/target/debug/build/fory-benchmarks-da1d33ca1c6423b6/out
warning: fory-benchmarks@0.1.0: Found proto file: proto/simple.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/medium.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/complex.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/realworld.proto
warning: fory-benchmarks@0.1.0: About to compile protobuf files
warning: fory-benchmarks@0.1.0: Protobuf compilation completed
error: could not compile `fory-benchmarks` (lib test) due to 120 previous errors
warning: fory-benchmarks@0.1.0: Build script running
warning: fory-benchmarks@0.1.0: OUT_DIR: /Users/chaokunyang/Desktop/chaokun/fury_open_source/rust/target/debug/build/fory-benchmarks-da1d33ca1c6423b6/out
warning: fory-benchmarks@0.1.0: Found proto file: proto/simple.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/medium.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/complex.proto
warning: fory-benchmarks@0.1.0: Found proto file: proto/realworld.proto
warning: fory-benchmarks@0.1.0: About to compile protobuf files
warning: fory-benchmarks@0.1.0: Protobuf compilation completed
error: could not compile `fory-benchmarks` (lib) due to 120 previous errors
